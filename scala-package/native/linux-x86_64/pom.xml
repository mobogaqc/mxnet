<project>

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>ml.dmlc.mxnet</groupId>
    <artifactId>mxnet-scala-native-parent</artifactId>
    <version>0.1-SNAPSHOT</version>
  </parent>

  <groupId>ml.dmlc.mxnet</groupId>
  <artifactId>libmxnet-scala</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>MXNet Scala Package - Native Linux-x86_64</name>
  <url>http://maven.apache.org</url>

  <properties>
    <opencv.pkg.tmpfile>opencv.pkg.txt</opencv.pkg.tmpfile>
  </properties>

  <packaging>so</packaging>

  <dependencies>
    <dependency>
      <groupId>ml.dmlc.mxnet</groupId>
      <artifactId>mxnet-scala-core</artifactId>
      <version>0.1-SNAPSHOT</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>   
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>     

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <exportAntProperties>true</exportAntProperties>
              <tasks>
                <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath" />
                <if>
                  <isset property="intel" />
                  <then>
                    <property name="use.cblas" value="0" />
                    <property name="use.mkl" value="1" />
                    <property name="cflags.blas" value="-I${intel}/mkl/include" />
                    <property name="ldflags.blas" value="-L${intel}/mkl/lib -L${intel}/lib" />
                  </then>
                  <else>
                    <property name="use.cblas" value="1" />
                    <property name="use.mkl" value="0" />
                    <property name="cflags.blas" value="" />
                    <if>
                      <not>
                        <isset property="ldflags.blas" />
                      </not>
                      <then>
                        <property name="ldflags.blas" value="-lcblas" />
                      </then>
                    </if>
                  </else>
                </if>
                <if>
                  <not>
                    <isset property="cxx" />
                  </not>
                  <then>
                    <property name="cxx" value="g++" />
                  </then>
                </if>
                <!-- echo opencv libs to a temp file and then load it into a property -->
                <exec executable="pkg-config" output="${opencv.pkg.tmpfile}" failonerror="true">
                  <arg line="--libs opencv" />
                </exec>
                <loadfile srcfile="${opencv.pkg.tmpfile}" property="ldflags.opencv" />
                <delete file="${opencv.pkg.tmpfile}" />
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>native-maven-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <!--  trigger javah -->
          <javahOS>linux</javahOS>
          <compilerProvider>generic-classic</compilerProvider>
          <compilerExecutable>${cxx}</compilerExecutable>
          <linkerExecutable>${cxx}</linkerExecutable>
          <sources>
            <source>
              <directory>../src/main/native</directory>
              <fileNames>
                <fileName>ml_dmlc_mxnet_native_c_api.cc</fileName>
              </fileNames>
            </source>
          </sources>
          <compilerStartOptions>
            <compilerStartOption>-std=c++0x</compilerStartOption>
          </compilerStartOptions>
          <compilerMiddleOptions>
            <compilerMiddleOption>
              -msse3 -funroll-loops -Wno-unused-parameter -Wno-unknown-pragmas -fopenmp
            </compilerMiddleOption>
          </compilerMiddleOptions>
          <compilerEndOptions>
            <compilerEndOption>-I../../../include</compilerEndOption>
            <compilerEndOption>-I../../../dmlc-core/include</compilerEndOption>
            <compilerEndOption>-I../../../mshadow ${cflags.blas}</compilerEndOption>
            <compilerEndOption>-DMSHADOW_USE_CUDA=0</compilerEndOption>
            <compilerEndOption>-DMSHADOW_USE_CBLAS=${use.cblas}</compilerEndOption>
            <compilerEndOption>-DMSHADOW_USE_MKL=${use.mkl}</compilerEndOption>
            <compilerEndOption>-fPIC</compilerEndOption>
          </compilerEndOptions>
          <linkerStartOptions>
            <linkerStartOption>-shared</linkerStartOption>
          </linkerStartOptions>
          <linkerMiddleOptions>
            <linkerMiddleOption>-lm -lrt</linkerMiddleOption>
            <linkerMiddleOption>${ldflags.opencv}</linkerMiddleOption>
            <linkerMiddleOption>-Wl,--whole-archive</linkerMiddleOption>
            <linkerMiddleOption>../../../lib/libmxnet.a</linkerMiddleOption>
            <linkerMiddleOption>../../../dmlc-core/libdmlc.a</linkerMiddleOption>
            <linkerMiddleOption>-Wl,--no-whole-archive</linkerMiddleOption>
          </linkerMiddleOptions>
        </configuration>

        <executions>
          <execution>
            <id>javah</id>
            <phase>generate-sources</phase>
            <configuration>
              <javahOS>linux</javahOS>
              <javahProvider>default</javahProvider>
              <javahOutputDirectory>${project.build.directory}/custom-javah</javahOutputDirectory>
              <workingDirectory>${basedir}</workingDirectory>
              <javahOutputFileName>ml_dmlc_mxnet_native_c_api.h</javahOutputFileName>
              <javahClassNames>
                <javahClassName>ml.dmlc.mxnet.LibInfo</javahClassName>
              </javahClassNames>
            </configuration>
            <goals>
              <goal>javah</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
